
/*################################*\
    bangs  |  _width.less
\*################################*/

// Sets the width of an element.
//
// w  =  width
//
// 0  =  initial (not 0)
// i  =  inherit
// a  =  auto
// z  =  0
//
// # Percentage Widths
// ## In order by denominator
// NOTE only unique classes are listed.
// See code for all classes.
//
// 1o1   =  100%
// 1o2   =  50%
// 1o3   =  33.3%
// 2o3   =  66.7%
// 1o4   =  25%
// 3o4   =  75%
// 1o5   =  20%
// 2o5   =  40%
// 3o5   =  60%
// 4o5   =  80%
// 1o6   =  16.7%
// 5o6   =  83.3%
// 1o8   =  12.5%
// 3o8   =  37.5%
// 5o8   =  62.5%
// 7o8   =  87.5%
// 1o10  =  10%
// 3o10  =  30%
// 7o10  =  70%
// 9o10  =  90%
//
// ## In increasing order
// NOTE only unique classes are listed.
// See code for all classes.
//
// 1o10  =  10%
// 1o8  =  12.5%
// 1o6  =  16.7%
// 1o5  =  20%
// 1o4  =  25%
// 3o10  =  30%
// 1o3  =  33.3%
// 3o8  =  37.5%
// 2o5  =  40%
// 1o2  =  50%
// 3o5  =  60%
// 5o8  =  62.5%
// 2o3  =  66.7%
// 7o10  =  70%
// 3o4  =  75%
// 4o5  =  80%
// 5o6  =  83.3%
// 7o8  =  87.5%
// 9o10  =  90%
// 1o1  =  100%
//
// # Pixel Widths
// 96px
// 192px
// 288px
// 384px
// 480px
// 576px
// 672px
// 768px
// 864px
// 960px
// 1056px
// 1152px
// 1248px
// 1344px
// 1440px
//
// # Em Widths
// 5em
// 10em
// 15em
// 20em
// 25em
// 30em
// 35em
// 40em
// 45em
// 50em
// 55em
// 60em
// 65em
// 70em
// 75em
// 80em
// 85em
// 90em
//
// ^initial
// : `auto`
// ^inherited
// : false
// ^url
// : https://developer.mozilla.org/en-US/docs/Web/CSS/width
// ^author
// : Chris Harvey
// ^updated
// : 2016-02-11

.-w-0 { .-w-a; width: initial !important; }
.-w-i {        width: inherit !important; }
.-w-a {        width: auto    !important; }
.-w-z {        width: 0       !important; }

// Generates a class `.-w-‹a›o‹b›` (e.g. `.-w-3o5`), where
// ‹a› is the numerator,
// ‹b› is the denominator,
// and the width is ‹a› divided by ‹b› as a percent.
// ^params
// @b  - the denominator of the fraction. required.
// @bp - the breakpoint suffix, if any
// .gen-w-frac(@b; @bp: ~''; @i: 1) when (@i =< @b) {
//   .-w-@{i}o@{b}@{bp} { width: (@i/@b * 100%); }
//   .gen-w-frac(@b; @bp; (@i + 1));
// }
// .gen-w-frac(1);
// .gen-w-frac(2);
// .gen-w-frac(3);
// .gen-w-frac(4);
// .gen-w-frac(5);
// .gen-w-frac(6);
// .gen-w-frac(8);
// .gen-w-frac(10);
.-w-10o10,
.-w-8o8,
.-w-6o6,
.-w-5o5,
.-w-4o4,
.-w-3o3,
.-w-2o2,
.-w-1o1  { width: (1/1 ) * 100% !important; }
.-w-5o10,
.-w-4o8,
.-w-3o6,
.-w-2o4,
.-w-1o2  { width: (1/2 ) * 100% !important; }
.-w-2o6,
.-w-1o3  { width: (1/3 ) * 100% !important; }
.-w-4o6,
.-w-2o3  { width: (2/3 ) * 100% !important; }
.-w-2o8,
.-w-1o4  { width: (1/4 ) * 100% !important; }
.-w-6o8,
.-w-3o4  { width: (3/4 ) * 100% !important; }
.-w-2o10,
.-w-1o5  { width: (1/5 ) * 100% !important; }
.-w-4o10,
.-w-2o5  { width: (2/5 ) * 100% !important; }
.-w-6o10,
.-w-3o5  { width: (3/5 ) * 100% !important; }
.-w-8o10,
.-w-4o5  { width: (4/5 ) * 100% !important; }
.-w-1o6  { width: (1/6 ) * 100% !important; }
.-w-5o6  { width: (5/6 ) * 100% !important; }
.-w-1o8  { width: (1/8 ) * 100% !important; }
.-w-3o8  { width: (3/8 ) * 100% !important; }
.-w-5o8  { width: (5/8 ) * 100% !important; }
.-w-7o8  { width: (7/8 ) * 100% !important; }
.-w-1o10 { width: (1/10) * 100% !important; }
.-w-3o10 { width: (3/10) * 100% !important; }
.-w-7o10 { width: (7/10) * 100% !important; }
.-w-9o10 { width: (9/10) * 100% !important; }


// Generates a class `.-w-‹i›px` (e.g. `.-w-288px`), where
// ‹i› is the integer argument, the width in pixels.
// The mixin is recursive, starting at ‹i›==96,
// incrementing by 96 each time it is called,
// stopping when ‹i›==1440.
// ^params
// @bp - the breakpoint suffix, if any
@px_per_it: 96;
@max_px: 1440;
.gen-w-px(@bp: ~''; @i: @px_per_it) when (@i =< @max_px) {
  .-w-@{i}px@{bp} { width: (@i * 1px) !important; }
  .gen-w-px(@bp; @i + @px_per_it);
}
.gen-w-px();


// Generates a class `.-w-‹i›em` (e.g. `.-w-30em`), where
// ‹i› is the integer argument, the width in ems.
// The mixin is recursive, starting at ‹i›==5,
// incrementing by 5 each time it is called,
// stopping when ‹i›==90.
// ^params
// bp - the breakpoint suffix, if any
@em_per_it: 5;
@max_em: 90;
.gen-w-em(@bp: ~''; @i: @em_per_it) when (@i =< @max_em) {
  .-w-@{i}em@{bp} { width: (@i * 1em) !important; }
  .gen-w-em(@bp; @i+@em_per_it);
}
.gen-w-em();


@media screen {
  .-w-0-s { .-w-0; }
  .-w-i-s { .-w-i; }
  .-w-a-s { .-w-a; }
  .-w-z-s { .-w-z; }

// .gen-w-frac(1;  ~'-s');
// .gen-w-frac(2;  ~'-s');
// .gen-w-frac(3;  ~'-s');
// .gen-w-frac(4;  ~'-s');
// .gen-w-frac(5;  ~'-s');
// .gen-w-frac(6;  ~'-s');
// .gen-w-frac(8;  ~'-s');
// .gen-w-frac(10; ~'-s');
  .-w-10o10-s,
  .-w-8o8-s,
  .-w-6o6-s,
  .-w-5o5-s,
  .-w-4o4-s,
  .-w-3o3-s,
  .-w-2o2-s,
  .-w-1o1-s  { .-w-1o1 ; }
  .-w-5o10-s,
  .-w-4o8-s,
  .-w-3o6-s,
  .-w-2o4-s,
  .-w-1o2-s  { .-w-1o2 ; }
  .-w-2o6-s,
  .-w-1o3-s  { .-w-1o3 ; }
  .-w-4o6-s,
  .-w-2o3-s  { .-w-2o3 ; }
  .-w-2o8-s,
  .-w-1o4-s  { .-w-1o4 ; }
  .-w-6o8-s,
  .-w-3o4-s  { .-w-3o4 ; }
  .-w-2o10-s,
  .-w-1o5-s  { .-w-1o5 ; }
  .-w-4o10-s,
  .-w-2o5-s  { .-w-2o5 ; }
  .-w-6o10-s,
  .-w-3o5-s  { .-w-3o5 ; }
  .-w-8o10-s,
  .-w-4o5-s  { .-w-4o5 ; }
  .-w-1o6-s  { .-w-1o6 ; }
  .-w-5o6-s  { .-w-5o6 ; }
  .-w-1o8-s  { .-w-1o8 ; }
  .-w-3o8-s  { .-w-3o8 ; }
  .-w-5o8-s  { .-w-5o8 ; }
  .-w-7o8-s  { .-w-7o8 ; }
  .-w-1o10-s { .-w-1o10; }
  .-w-3o10-s { .-w-3o10; }
  .-w-7o10-s { .-w-7o10; }
  .-w-9o10-s { .-w-9o10; }

  .gen-w-px(~'-s');
  .gen-w-em(~'-s');
}

@media screen and (min-width: 30em) {
  .-w-0-sK { .-w-0; }
  .-w-i-sK { .-w-i; }
  .-w-a-sK { .-w-a; }
  .-w-z-sK { .-w-z; }

// .gen-w-frac(1;  ~'-sK');
// .gen-w-frac(2;  ~'-sK');
// .gen-w-frac(3;  ~'-sK');
// .gen-w-frac(4;  ~'-sK');
// .gen-w-frac(5;  ~'-sK');
// .gen-w-frac(6;  ~'-sK');
// .gen-w-frac(8;  ~'-sK');
// .gen-w-frac(10; ~'-sK');
  .-w-10o10-sK,
  .-w-8o8-sK,
  .-w-6o6-sK,
  .-w-5o5-sK,
  .-w-4o4-sK,
  .-w-3o3-sK,
  .-w-2o2-sK,
  .-w-1o1-sK  { .-w-1o1 ; }
  .-w-5o10-sK,
  .-w-4o8-sK,
  .-w-3o6-sK,
  .-w-2o4-sK,
  .-w-1o2-sK  { .-w-1o2 ; }
  .-w-2o6-sK,
  .-w-1o3-sK  { .-w-1o3 ; }
  .-w-4o6-sK,
  .-w-2o3-sK  { .-w-2o3 ; }
  .-w-2o8-sK,
  .-w-1o4-sK  { .-w-1o4 ; }
  .-w-6o8-sK,
  .-w-3o4-sK  { .-w-3o4 ; }
  .-w-2o10-sK,
  .-w-1o5-sK  { .-w-1o5 ; }
  .-w-4o10-sK,
  .-w-2o5-sK  { .-w-2o5 ; }
  .-w-6o10-sK,
  .-w-3o5-sK  { .-w-3o5 ; }
  .-w-8o10-sK,
  .-w-4o5-sK  { .-w-4o5 ; }
  .-w-1o6-sK  { .-w-1o6 ; }
  .-w-5o6-sK  { .-w-5o6 ; }
  .-w-1o8-sK  { .-w-1o8 ; }
  .-w-3o8-sK  { .-w-3o8 ; }
  .-w-5o8-sK  { .-w-5o8 ; }
  .-w-7o8-sK  { .-w-7o8 ; }
  .-w-1o10-sK { .-w-1o10; }
  .-w-3o10-sK { .-w-3o10; }
  .-w-7o10-sK { .-w-7o10; }
  .-w-9o10-sK { .-w-9o10; }

  .gen-w-px(~'-sK');
  .gen-w-em(~'-sK');
}

@media screen and (min-width: 45em) {
  .-w-0-sM { .-w-0; }
  .-w-i-sM { .-w-i; }
  .-w-a-sM { .-w-a; }
  .-w-z-sM { .-w-z; }

// .gen-w-frac(1;  ~'-sM');
// .gen-w-frac(2;  ~'-sM');
// .gen-w-frac(3;  ~'-sM');
// .gen-w-frac(4;  ~'-sM');
// .gen-w-frac(5;  ~'-sM');
// .gen-w-frac(6;  ~'-sM');
// .gen-w-frac(8;  ~'-sM');
// .gen-w-frac(10; ~'-sM');
  .-w-10o10-sM,
  .-w-8o8-sM,
  .-w-6o6-sM,
  .-w-5o5-sM,
  .-w-4o4-sM,
  .-w-3o3-sM,
  .-w-2o2-sM,
  .-w-1o1-sM  { .-w-1o1 ; }
  .-w-5o10-sM,
  .-w-4o8-sM,
  .-w-3o6-sM,
  .-w-2o4-sM,
  .-w-1o2-sM  { .-w-1o2 ; }
  .-w-2o6-sM,
  .-w-1o3-sM  { .-w-1o3 ; }
  .-w-4o6-sM,
  .-w-2o3-sM  { .-w-2o3 ; }
  .-w-2o8-sM,
  .-w-1o4-sM  { .-w-1o4 ; }
  .-w-6o8-sM,
  .-w-3o4-sM  { .-w-3o4 ; }
  .-w-2o10-sM,
  .-w-1o5-sM  { .-w-1o5 ; }
  .-w-4o10-sM,
  .-w-2o5-sM  { .-w-2o5 ; }
  .-w-6o10-sM,
  .-w-3o5-sM  { .-w-3o5 ; }
  .-w-8o10-sM,
  .-w-4o5-sM  { .-w-4o5 ; }
  .-w-1o6-sM  { .-w-1o6 ; }
  .-w-5o6-sM  { .-w-5o6 ; }
  .-w-1o8-sM  { .-w-1o8 ; }
  .-w-3o8-sM  { .-w-3o8 ; }
  .-w-5o8-sM  { .-w-5o8 ; }
  .-w-7o8-sM  { .-w-7o8 ; }
  .-w-1o10-sM { .-w-1o10; }
  .-w-3o10-sM { .-w-3o10; }
  .-w-7o10-sM { .-w-7o10; }
  .-w-9o10-sM { .-w-9o10; }

  .gen-w-px(~'-sM');
  .gen-w-em(~'-sM');
}

@media screen and (min-width: 60em) {
  .-w-0-sG { .-w-0; }
  .-w-i-sG { .-w-i; }
  .-w-a-sG { .-w-a; }
  .-w-z-sG { .-w-z; }

// .gen-w-frac(1;  ~'-sG');
// .gen-w-frac(2;  ~'-sG');
// .gen-w-frac(3;  ~'-sG');
// .gen-w-frac(4;  ~'-sG');
// .gen-w-frac(5;  ~'-sG');
// .gen-w-frac(6;  ~'-sG');
// .gen-w-frac(8;  ~'-sG');
// .gen-w-frac(10; ~'-sG');
  .-w-10o10-sG,
  .-w-8o8-sG,
  .-w-6o6-sG,
  .-w-5o5-sG,
  .-w-4o4-sG,
  .-w-3o3-sG,
  .-w-2o2-sG,
  .-w-1o1-sG  { .-w-1o1 ; }
  .-w-5o10-sG,
  .-w-4o8-sG,
  .-w-3o6-sG,
  .-w-2o4-sG,
  .-w-1o2-sG  { .-w-1o2 ; }
  .-w-2o6-sG,
  .-w-1o3-sG  { .-w-1o3 ; }
  .-w-4o6-sG,
  .-w-2o3-sG  { .-w-2o3 ; }
  .-w-2o8-sG,
  .-w-1o4-sG  { .-w-1o4 ; }
  .-w-6o8-sG,
  .-w-3o4-sG  { .-w-3o4 ; }
  .-w-2o10-sG,
  .-w-1o5-sG  { .-w-1o5 ; }
  .-w-4o10-sG,
  .-w-2o5-sG  { .-w-2o5 ; }
  .-w-6o10-sG,
  .-w-3o5-sG  { .-w-3o5 ; }
  .-w-8o10-sG,
  .-w-4o5-sG  { .-w-4o5 ; }
  .-w-1o6-sG  { .-w-1o6 ; }
  .-w-5o6-sG  { .-w-5o6 ; }
  .-w-1o8-sG  { .-w-1o8 ; }
  .-w-3o8-sG  { .-w-3o8 ; }
  .-w-5o8-sG  { .-w-5o8 ; }
  .-w-7o8-sG  { .-w-7o8 ; }
  .-w-1o10-sG { .-w-1o10; }
  .-w-3o10-sG { .-w-3o10; }
  .-w-7o10-sG { .-w-7o10; }
  .-w-9o10-sG { .-w-9o10; }

  .gen-w-px(~'-sG');
  .gen-w-em(~'-sG');
}

@media screen and (min-width: 75em) {
  .-w-0-sT { .-w-0; }
  .-w-i-sT { .-w-i; }
  .-w-a-sT { .-w-a; }
  .-w-z-sT { .-w-z; }

// .gen-w-frac(1;  ~'-sT');
// .gen-w-frac(2;  ~'-sT');
// .gen-w-frac(3;  ~'-sT');
// .gen-w-frac(4;  ~'-sT');
// .gen-w-frac(5;  ~'-sT');
// .gen-w-frac(6;  ~'-sT');
// .gen-w-frac(8;  ~'-sT');
// .gen-w-frac(10; ~'-sT');
  .-w-10o10-sT,
  .-w-8o8-sT,
  .-w-6o6-sT,
  .-w-5o5-sT,
  .-w-4o4-sT,
  .-w-3o3-sT,
  .-w-2o2-sT,
  .-w-1o1-sT  { .-w-1o1 ; }
  .-w-5o10-sT,
  .-w-4o8-sT,
  .-w-3o6-sT,
  .-w-2o4-sT,
  .-w-1o2-sT  { .-w-1o2 ; }
  .-w-2o6-sT,
  .-w-1o3-sT  { .-w-1o3 ; }
  .-w-4o6-sT,
  .-w-2o3-sT  { .-w-2o3 ; }
  .-w-2o8-sT,
  .-w-1o4-sT  { .-w-1o4 ; }
  .-w-6o8-sT,
  .-w-3o4-sT  { .-w-3o4 ; }
  .-w-2o10-sT,
  .-w-1o5-sT  { .-w-1o5 ; }
  .-w-4o10-sT,
  .-w-2o5-sT  { .-w-2o5 ; }
  .-w-6o10-sT,
  .-w-3o5-sT  { .-w-3o5 ; }
  .-w-8o10-sT,
  .-w-4o5-sT  { .-w-4o5 ; }
  .-w-1o6-sT  { .-w-1o6 ; }
  .-w-5o6-sT  { .-w-5o6 ; }
  .-w-1o8-sT  { .-w-1o8 ; }
  .-w-3o8-sT  { .-w-3o8 ; }
  .-w-5o8-sT  { .-w-5o8 ; }
  .-w-7o8-sT  { .-w-7o8 ; }
  .-w-1o10-sT { .-w-1o10; }
  .-w-3o10-sT { .-w-3o10; }
  .-w-7o10-sT { .-w-7o10; }
  .-w-9o10-sT { .-w-9o10; }

  .gen-w-px(~'-sT');
  .gen-w-em(~'-sT');
}

@media print {
  .-w-0-p { .-w-0; }
  .-w-i-p { .-w-i; }
  .-w-a-p { .-w-a; }
  .-w-z-p { .-w-z; }

// .gen-w-frac(1;  ~'-p');
// .gen-w-frac(2;  ~'-p');
// .gen-w-frac(3;  ~'-p');
// .gen-w-frac(4;  ~'-p');
// .gen-w-frac(5;  ~'-p');
// .gen-w-frac(6;  ~'-p');
// .gen-w-frac(8;  ~'-p');
// .gen-w-frac(10; ~'-p');
  .-w-10o10-p,
  .-w-8o8-p,
  .-w-6o6-p,
  .-w-5o5-p,
  .-w-4o4-p,
  .-w-3o3-p,
  .-w-2o2-p,
  .-w-1o1-p  { .-w-1o1 ; }
  .-w-5o10-p,
  .-w-4o8-p,
  .-w-3o6-p,
  .-w-2o4-p,
  .-w-1o2-p  { .-w-1o2 ; }
  .-w-2o6-p,
  .-w-1o3-p  { .-w-1o3 ; }
  .-w-4o6-p,
  .-w-2o3-p  { .-w-2o3 ; }
  .-w-2o8-p,
  .-w-1o4-p  { .-w-1o4 ; }
  .-w-6o8-p,
  .-w-3o4-p  { .-w-3o4 ; }
  .-w-2o10-p,
  .-w-1o5-p  { .-w-1o5 ; }
  .-w-4o10-p,
  .-w-2o5-p  { .-w-2o5 ; }
  .-w-6o10-p,
  .-w-3o5-p  { .-w-3o5 ; }
  .-w-8o10-p,
  .-w-4o5-p  { .-w-4o5 ; }
  .-w-1o6-p  { .-w-1o6 ; }
  .-w-5o6-p  { .-w-5o6 ; }
  .-w-1o8-p  { .-w-1o8 ; }
  .-w-3o8-p  { .-w-3o8 ; }
  .-w-5o8-p  { .-w-5o8 ; }
  .-w-7o8-p  { .-w-7o8 ; }
  .-w-1o10-p { .-w-1o10; }
  .-w-3o10-p { .-w-3o10; }
  .-w-7o10-p { .-w-7o10; }
  .-w-9o10-p { .-w-9o10; }

  .gen-w-px(~'-p');
  .gen-w-em(~'-p');
}
